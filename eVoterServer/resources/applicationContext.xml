<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation=
		"http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    
    <bean
		id="jdbcOperations"
		class="org.springframework.jdbc.core.JdbcTemplate">
	 	<property name="fetchSize" value="100"/>
		<constructor-arg ref="dataSource" />
	</bean>
	
    
    <bean id="userDAO" class="evoter.server.dao.impl.UserDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="userTypeDAO" class="evoter.server.dao.impl.UserTypeDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="subjectDAO" class="evoter.server.dao.impl.SubjectDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>
    
    <bean id="userSubjectDAO" class="evoter.server.dao.impl.UserSubjectDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="questionTypeDAO" class="evoter.server.dao.impl.QuestionTypeDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="sessionDAO" class="evoter.server.dao.impl.SessionDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="sessionUserDAO" class="evoter.server.dao.impl.SessionUserDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="questionDAO" class="evoter.server.dao.impl.QuestionDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="questionSessionDAO" class="evoter.server.dao.impl.QuestionSessionDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>
    
    <bean id="answerDAO" class="evoter.server.dao.impl.AnswerDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
    <bean id="statisticsDAO" class="evoter.server.dao.impl.StatisticsDAOImpl" lazy-init="true">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
    <bean id="accountRequest" class="evoter.server.http.request.AccountRequest" lazy-init="true">
		<property name="userDAO" ref="userDAO" />
	</bean>    

    <bean id="questionRequest" class="evoter.server.http.request.QuestionRequest" lazy-init="true">
		<property name="userDAO" ref="userDAO" />
		<property name="questionTypeDAO" ref="questionTypeDAO" />
		<property name="questionSessionDAO" ref="questionSessionDAO" />
		<property name="questionDAO" ref="questionDAO" />
		<property name="answerDAO" ref="answerDAO" />
	</bean>

    <bean id="sessionRequest" class="evoter.server.http.request.SessionRequest" lazy-init="true">
		<property name="userDAO" ref="userDAO" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionUserDAO" ref="sessionUserDAO" />		
	</bean>    
    	    
    <bean id="subjectRequest" class="evoter.server.http.request.SubjectRequest" lazy-init="true">
		<property name="questionSessionDAO" ref="questionSessionDAO" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionUserDAO" ref="sessionUserDAO" />		
		<property name="statisticsDAO" ref="statisticsDAO" />
		<property name="subjectDAO" ref="subjectDAO" />
		<property name="userDAO" ref="userDAO" />
		<property name="userSubjectDAO" ref="userSubjectDAO" />
	</bean>    
    
    <bean id="httpConnection" class="evoter.server.http.HttpConnection" lazy-init="true">
		<property name="context" value="${application.context}" />
		<property name="port" value="${application.port}" />
		<property name="ip" value="${application.ip}" />
	</bean>
    
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
     </bean>
     
    <context:property-placeholder location="resources/jdbc.properties,resources/application.properties"/>
    <tx:annotation-driven transaction-manager="txManager" order="200"/>
    
    	
</beans>